#pragma once

#include <Windows.h>
#include <iostream>
#include <vector>
#include "RAddies.h"
#include <iostream>
#include <string>
#include "RCmds.h"


void secret() {
	MessageBoxA(NULL, "Just wanted you to know it's been a very good journey with you guys and i love you, you too pudding no homo but i love u all, thanks for sticking with me!", "special notice <3", NULL);
}


extern "C" {

#include "lua.h"

}


HINSTANCE hInstance;

LONG OldWndProc;
#define WIN32_LEAN_AND_MEAN
#define _CRT_SECURE_NO_WARNINGS
#define _CRT_SECURE_NO_DEPRECATE




/* Our main start up functions, ah - Memories.*/


DWORD WINAPI Main() {
	DWORD NullFC;
	VirtualProtect((PVOID)&FreeConsole, 1, PAGE_EXECUTE_READWRITE, &NullFC); 
	*(BYTE*)(&FreeConsole) = 0xC3; 
	AllocConsole(); 
	SetConsoleTitle("Template V1 Console.");
	freopen("CONOUT$", "w", stdout); 
	freopen("CONIN$", "r", stdin);

	secret();
	SetConsoleTextAttribute(FreeConsole, 15);
	std::cout << "Made by Envo and Pudding.\r\n"; //memories
	SetConsoleTextAttribute(FreeConsole, 11);
	std::cout << "Enter your command! (type 'cmds' for cmds)\r\n";
    SetWindowTextW(FindWindowW(NULL, L"ROBLOX"), L"Roblox - TemplateV1"); //meme 
    do {
		try {
			ExecuteFunc(GetInput());
		}
		catch (std::exception e) {

		}
		catch (...) {

		}
	} while (true);


	return 0;
}





bool WINAPI DllMain(HMODULE InjectedExploitModule, DWORD ReasonForCall, LPVOID Reserved) {
	UNREFERENCED_PARAMETER(InjectedExploitModule);
	UNREFERENCED_PARAMETER(Reserved);
	if (ReasonForCall == DLL_PROCESS_ATTACH) {
		CreateThread(0, NULL, (LPTHREAD_START_ROUTINE)&Main, NULL, NULL, NULL);


		




		
	};
	return true;
};